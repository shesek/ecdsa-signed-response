// Generated by CoffeeScript 1.8.0
(function() {
  var ecdsa, exports, make_message, sha256, sign_response;

  ecdsa = require('ecdsa');

  sha256 = require('crypto-hashing').sha256;

  sign_response = function(key, opt) {
    var curve, req_filter;
    if (opt == null) {
      opt = {};
    }
    req_filter = opt.req_filter || function(req) {
      return req.method === 'GET' && (req.query.sign_resp || req.get('X-Sign-Response'));
    };
    curve = ecdsa(opt.curve || 'secp256k1');
    return function(req, res, next) {
      var send;
      if (req_filter(req)) {
        send = res.send;
        res.send = function(code, body) {
          var msg, sig;
          if (body == null) {
            body = code;
            code = null;
          }
          if (typeof body === 'string') {
            msg = make_message(req, body);
            sig = new Buffer(ecdsa.serializeSig(curve.sign(msg, key)));
            res.set('X-Response-Sig', sig.toString('base64'));
          }
          if (code != null) {
            return send.call(this, code, body);
          } else {
            return send.call(this, body);
          }
        };
      }
      return next(null);
    };
  };

  make_message = function(_arg, body) {
    var hostname, method, url;
    hostname = _arg.hostname, method = _arg.method, url = _arg.url;
    return sha256(JSON.stringify({
      hostname: hostname,
      method: method,
      url: url,
      body: body
    }));
  };

  exports = module.exports = sign_response;

  exports.sign_response = sign_response;

  exports.make_message = make_message;

}).call(this);
